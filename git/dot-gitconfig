[alias]
	# using a function mostly so I can use `git lg` or `git lg --oneline`
	lg = "!git log --graph --all --decorate --date=relative \"$@\""
	ls = ls-files
	erase-remote-branch = push -d origin
	numlineschanged = diff --stat
	# if nvim isn't installed, use:
	#   git difftool --no-prompt --extcmd 'vim -d "+colorscheme morning"'
	# already have gruvbox plugin as a really good diffing colorscheme
	vimdiff = difftool --no-prompt --extcmd 'nvim -d'
[branch]
	# https://blog.gitbutler.com/git-tips-2-new-stuff-in-git/#some-git-branch-stuff
	sort = -committerdate
[color]
	ui = true
[column]
	# show `git branch` output as columns if available
	ui = auto
[commit]
	template = ~/.config/git_commit-template.txt
[core]
	excludesfile = ~/.config/gitignore_global
	longpaths = true
	pager = delta
[credential "https://github.com"]
	helper = store
	username = bbkane
[delta]
	# minus-style = normal "#340001"
	# plus-style = syntax "#012800"
	# syntax-theme = zenburn
	navigate = true  # use n and N to move between diff sections
	dark = true      # or light = true, or omit for auto-detection
[diff]
	# https://blog.gitbutler.com/how-git-core-devs-configure-git/
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[fetch]
	# keep remote refs as close as possible to remote
	# https://blog.gitbutler.com/how-git-core-devs-configure-git/
	prune = true
	pruneTags = true
	all = true
# Not sure why git lfs got installed but whatever...
# https://mydeveloperplanet.com/2018/10/31/git-lfs-why-and-how-to-use/
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[help]
	autocorrect = prompt
[init]
	defaultBranch = master
[interactive]
	diffFilter = delta --color-only
[merge]
	conflictstyle = zdiff3
[pull]
	rebase = false
[push]
	autoSetupRemote = true
	default = simple
	followTags = true
[tag]
	sort = version:refname
[user]
	name = Benjamin Kane

# case insensitive include
# personal GitHub
[includeIf "gitdir/i:~/Git-GH/"]
	path = ~/.config/gitconfig_Git-GH

[includeIf "gitdir/i:~/Git-LI-GH/"]
	path = ~/.config/gitconfig_Git-LI-GH

[includeIf "gitdir/i:~/Git-LI-GH-Ent/"]
	path = ~/.config/gitconfig_Git-LI-GH-Ent

[includeIf "gitdir/i:~/Git-LI-AzDev/"]
	path = ~/.config/gitconfig_Git-LI-AzDev

[includeIf "gitdir/i:~/Git-MS-AzDev/"]
	path = ~/.config/gitconfig_Git-MS-AzDev

